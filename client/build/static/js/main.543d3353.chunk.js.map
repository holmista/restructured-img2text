{"version":3,"sources":["App.js","index.js"],"names":["App","useState","file","setfile","preview","setpreview","imagetext","setimagetext","loading","setloading","able","setable","notsupported","setnotsupported","upload","a","formdata","FormData","append","axios","post","res","text","data","console","log","color","size","className","src","type","onChange","e","undefined","target","files","URL","createObjectURL","err","disabled","onClick","ReactDOM","render","document","getElementById"],"mappings":"sQAkFeA,MA9Ef,WACI,MAAuBC,mBAAS,IAAhC,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAA6BF,oBAAS,GAAtC,mBAAMG,EAAN,KAAeC,EAAf,KACA,EAAiCJ,mBAAS,IAA1C,mBAAMK,EAAN,KAAiBC,EAAjB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAAwBR,oBAAS,GAAjC,mBAAOS,EAAP,KAAaC,EAAb,KACA,EAAwCV,oBAAS,GAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KAEMC,EAAM,uCAAG,gCAAAC,EAAA,6DACXJ,GAAQ,GACRF,GAAW,IACLO,EAAW,IAAIC,UACZC,OAAO,OAAOhB,GAJZ,kBAMWiB,IAAMC,KAAK,UAAWJ,GANjC,OAMDK,EANC,OAOHC,EAAOD,EAAIE,KACfd,GAAW,GACXF,EAAae,GACbX,GAAQ,GAVD,kDAYPa,QAAQC,IAAR,MACAd,GAAQ,GAbD,0DAAH,qDAmDZ,OACI,gCACKC,EAAe,oEAA4C,GAC3DJ,EAAU,cAAC,IAAD,CAAYkB,MAAO,UAAWlB,QAASA,EAASmB,KAAM,KAAO,GACxE,qBAAKC,UAAU,QAAf,SACI,qBAAKA,UAAU,YAAYC,IAAKzB,MAEpC,sBAAKwB,UAAY,aAAjB,UACI,uBAAOA,UAAU,QAAQE,KAAK,OAAOC,SA1C5B,SAACC,GAClB,IAAI9B,EAAO,UACY+B,IAApBD,EAAEE,OAAOC,MAAM,IACdxB,GAAQ,GACRN,GAAW,IAEgB,cAAxB2B,EAAEE,OAAOC,MAAM,GAAGL,MAA4C,aAAxBE,EAAEE,OAAOC,MAAM,GAAGL,MACvD5B,EAAO8B,EAAEE,OAAOC,MAAM,GACtBxB,GAAQ,GACRE,GAAgB,KAEhBW,QAAQC,IAAI,sBACZd,GAAQ,GACRE,GAAgB,IAMxB,IAEI,IAAMT,EAASgC,IAAIC,gBAAgBnC,GACnCG,EAAWD,GAGf,MAAMkC,GACFd,QAAQC,IAAIa,GAEZjC,GAAW,GAEfF,EAAQD,MAaA,wBAAQqC,UAAa7B,EAAMkB,UAAU,SAASY,QAAW1B,EAAzD,SAAiE,qBAAKc,UAAU,SAAf,uBACjE,qBAAKA,UAAU,aAEnB,qBAAKA,UAAU,SAAf,SACKtB,QCvEjBmC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.543d3353.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nfunction App(){\n    const[file, setfile] = useState('')\n    const[preview, setpreview] = useState(false)\n    const[imagetext, setimagetext] = useState('')\n    const [loading, setloading] = useState(false)\n    const [able, setable] = useState(false)\n    const [notsupported, setnotsupported] = useState(false)\n    \n    const upload = async()=>{\n        setable(false)\n        setloading(true)\n        const formdata = new FormData();\n        formdata.append('file',file);\n        try{\n            const res = await axios.post('/upload', formdata)\n            let text = res.data\n            setloading(false)\n            setimagetext(text)\n            setable(true)\n        }catch(error){\n            console.log(error)\n            setable(true)\n        }\n    }\n    \n    const handleupload = (e)=>{\n        let file = null\n        if(e.target.files[0]===undefined){\n            setable(false)\n            setpreview(false)\n        }else{\n            if(e.target.files[0].type=='image/jpeg'||e.target.files[0].type=='image/png'){\n                file = e.target.files[0]\n                setable(true)\n                setnotsupported(false)\n            }else{\n                console.log('not supported type')\n                setable(false)\n                setnotsupported(true)\n            }\n        }\n        \n        // const file = e.target.files[0]\n        // setfile(file)\n        try{\n            // const preview= URL.createObjectURL(e.target.files[0])\n            const preview= URL.createObjectURL(file)\n            setpreview(preview)\n            \n        }\n        catch(err){\n            console.log(err)\n            \n            setpreview(false)\n        }\n        setfile(file)\n        \n        \n    }\n    return(\n        <div>\n            {notsupported ? <h2>this type of file is not supported</h2>:''}\n            {loading ? <ClipLoader color={'#D736D3'} loading={loading} size={30} />:''}\n            <div className='image'>\n                <img className='thisimage' src={preview} />\n            </div>\n            <div className = 'fileupload'>\n                <input className='input' type='file' onChange = {handleupload}/>\n                <button disabled = {!able} className='button' onClick = {upload}><div className='upload'>convert</div></button>\n                <div className='clear'></div>\n            </div>\n            <div className='output'>\n                {imagetext}\n            </div>\n            \n        </div>\n    )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}